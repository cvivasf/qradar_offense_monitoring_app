######################################Configuration File For QRADAR SOAR Plugin Offense Escalation Failures Monitoring######################################
[MainConfig]
qradar_url = <qradar url>
qradar_api_key = <qradar api key>
last_notified_offense_file = <location of last notified offense id file>
failed_notifications_file = <location of failed notifications for offenses (ids) file>
email_host=<smtp server>
email_port=<smtp port>
email_user=<email address>
email_pass=<email password>

#####################################Log Level Configuration############################################

[Logging]
#Level log to use. Files and CLI will be affected. 2 files will be created inside the logs folder. Every one of them stores logs for every independent thread inside the app.
#If an invalid value or a wrong value is passed, it defaults to INFO. 
#Please, use one of the following (debug is the more log you will see). Note: it can be lowercase and with mistaken whitespaces at the start or the end of the log level ;)
# - DEBUG (level 10 shown in logs)
# - INFO (level 20 shown in logs)
# - WARNING (level 30 shown in logs)
# - ERROR (level 40 shown in logs)
#- CRITICAL (level 50 shown in logs)
logging_level = debug
#Enable or disable logs on the CLI (stdout). Useful when running the app as a service or if you just want to check the log files and avoid these streams. 
#If None or wrong value, defaults to true. Please, leep in mind that some logs will always appear when running via CLI (specially the ones shown before logger initializations). 
#In fact, if the server fails to start, try runnning it via CLI and look out for some initial logs, you might see more logs than in files.
cli_logging_enabled = true

######################################Default Configuration for QRADAR Offense polling######################################

[OffensesPollingRate]
#Time in seconds to wait for checking new offenses not being escalated and closed and sending them via email for notification.
polling_rate_non_escalated_offenses_checking = 5
#Time in seconds to retry for previously failed-to-notify offenses that were not being escalated and closed and sending them via email for notification.
polling_rate_trying_to_resend_offenses_notifications = 120

[OffensesToNotify]
offense_names_to_check = [
    "Sample Offense description (offenses with this description will be monitored)"]